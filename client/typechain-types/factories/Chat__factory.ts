/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type { Chat, ChatInterface } from "../Chat";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "address1",
        type: "address",
      },
      {
        internalType: "address",
        name: "address2",
        type: "address",
      },
    ],
    name: "getConversations",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "to",
            type: "address",
          },
          {
            internalType: "address",
            name: "from",
            type: "address",
          },
          {
            internalType: "string",
            name: "text",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "timestamp",
            type: "uint256",
          },
        ],
        internalType: "struct Chat.Message[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "string",
        name: "_text",
        type: "string",
      },
    ],
    name: "post",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50610de6806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c80637aeae27b1461003b578063875a8dfc1461006b575b600080fd5b6100556004803603810190610050919061065c565b610087565b6040516100629190610879565b60405180910390f35b610085600480360381019061008091906109d0565b61045c565b005b6060600060015467ffffffffffffffff8111156100a7576100a66108a5565b5b6040519080825280602002602001820160405280156100e057816020015b6100cd610596565b8152602001906001900390816100c55790505b5090506000805b600154811015610442578573ffffffffffffffffffffffffffffffffffffffff1660008083815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161480156101c157508473ffffffffffffffffffffffffffffffffffffffff1660008083815260200190815260200160002060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16145b8061029857508473ffffffffffffffffffffffffffffffffffffffff1660008083815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614801561029757508573ffffffffffffffffffffffffffffffffffffffff1660008083815260200190815260200160002060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16145b5b1561042f576000808281526020019081526020016000206040518060800160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160028201805461037690610a5b565b80601f01602080910402602001604051908101604052809291908181526020018280546103a290610a5b565b80156103ef5780601f106103c4576101008083540402835291602001916103ef565b820191906000526020600020905b8154815290600101906020018083116103d257829003601f168201915b5050505050815260200160038201548152505083838151811061041557610414610a8c565b5b6020026020010181905250818061042b90610aea565b9250505b808061043a90610aea565b9150506100e7565b50600154811015610451578082525b819250505092915050565b6000829050600033905060405180608001604052808373ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff16815260200184815260200142815250600080600154815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550604082015181600201908161056a9190610cde565b50606082015181600301559050506001600081548092919061058b90610aea565b919050555050505050565b6040518060800160405280600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff16815260200160608152602001600081525090565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610629826105fe565b9050919050565b6106398161061e565b811461064457600080fd5b50565b60008135905061065681610630565b92915050565b60008060408385031215610673576106726105f4565b5b600061068185828601610647565b925050602061069285828601610647565b9150509250929050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b6106d18161061e565b82525050565b600081519050919050565b600082825260208201905092915050565b60005b838110156107115780820151818401526020810190506106f6565b60008484015250505050565b6000601f19601f8301169050919050565b6000610739826106d7565b61074381856106e2565b93506107538185602086016106f3565b61075c8161071d565b840191505092915050565b6000819050919050565b61077a81610767565b82525050565b600060808301600083015161079860008601826106c8565b5060208301516107ab60208601826106c8565b50604083015184820360408601526107c3828261072e565b91505060608301516107d86060860182610771565b508091505092915050565b60006107ef8383610780565b905092915050565b6000602082019050919050565b600061080f8261069c565b61081981856106a7565b93508360208202850161082b856106b8565b8060005b85811015610867578484038952815161084885826107e3565b9450610853836107f7565b925060208a0199505060018101905061082f565b50829750879550505050505092915050565b600060208201905081810360008301526108938184610804565b905092915050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6108dd8261071d565b810181811067ffffffffffffffff821117156108fc576108fb6108a5565b5b80604052505050565b600061090f6105ea565b905061091b82826108d4565b919050565b600067ffffffffffffffff82111561093b5761093a6108a5565b5b6109448261071d565b9050602081019050919050565b82818337600083830152505050565b600061097361096e84610920565b610905565b90508281526020810184848401111561098f5761098e6108a0565b5b61099a848285610951565b509392505050565b600082601f8301126109b7576109b661089b565b5b81356109c7848260208601610960565b91505092915050565b600080604083850312156109e7576109e66105f4565b5b60006109f585828601610647565b925050602083013567ffffffffffffffff811115610a1657610a156105f9565b5b610a22858286016109a2565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680610a7357607f821691505b602082108103610a8657610a85610a2c565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610af582610767565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610b2757610b26610abb565b5b600182019050919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302610b947fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82610b57565b610b9e8683610b57565b95508019841693508086168417925050509392505050565b6000819050919050565b6000610bdb610bd6610bd184610767565b610bb6565b610767565b9050919050565b6000819050919050565b610bf583610bc0565b610c09610c0182610be2565b848454610b64565b825550505050565b600090565b610c1e610c11565b610c29818484610bec565b505050565b5b81811015610c4d57610c42600082610c16565b600181019050610c2f565b5050565b601f821115610c9257610c6381610b32565b610c6c84610b47565b81016020851015610c7b578190505b610c8f610c8785610b47565b830182610c2e565b50505b505050565b600082821c905092915050565b6000610cb560001984600802610c97565b1980831691505092915050565b6000610cce8383610ca4565b9150826002028217905092915050565b610ce7826106d7565b67ffffffffffffffff811115610d0057610cff6108a5565b5b610d0a8254610a5b565b610d15828285610c51565b600060209050601f831160018114610d485760008415610d36578287015190505b610d408582610cc2565b865550610da8565b601f198416610d5686610b32565b60005b82811015610d7e57848901518255600182019150602085019450602081019050610d59565b86831015610d9b5784890151610d97601f891682610ca4565b8355505b6001600288020188555050505b50505050505056fea2646970667358221220de49d99bf7ef3ee5ca927d250aa4b3d3fea317bc54b1404be4c0f7532b09592164736f6c63430008120033";

type ChatConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ChatConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Chat__factory extends ContractFactory {
  constructor(...args: ChatConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Chat> {
    return super.deploy(overrides || {}) as Promise<Chat>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): Chat {
    return super.attach(address) as Chat;
  }
  override connect(signer: Signer): Chat__factory {
    return super.connect(signer) as Chat__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ChatInterface {
    return new utils.Interface(_abi) as ChatInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Chat {
    return new Contract(address, _abi, signerOrProvider) as Chat;
  }
}
