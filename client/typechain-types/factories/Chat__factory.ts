/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type { Chat, ChatInterface } from "../Chat";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "string",
        name: "text",
        type: "string",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "onPost",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
    ],
    name: "changeName",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_other",
        type: "address",
      },
    ],
    name: "getConversations",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "to",
            type: "address",
          },
          {
            internalType: "address",
            name: "from",
            type: "address",
          },
          {
            internalType: "string",
            name: "text",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "timestamp",
            type: "uint256",
          },
        ],
        internalType: "struct Chat.Message[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getCorrespondents",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_addr",
        type: "address",
      },
    ],
    name: "getName",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "string",
        name: "_text",
        type: "string",
      },
    ],
    name: "post",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b5061183c806100206000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c80635353a2d81461005c5780635fd4b08a1461007857806374a15d12146100a85780637f75883d146100c6578063875a8dfc146100f6575b600080fd5b61007660048036038101906100719190610c84565b610112565b005b610092600480360381019061008d9190610d2f565b610165565b60405161009f9190610dec565b60405180910390f35b6100b0610236565b6040516100bd9190610ecc565b60405180910390f35b6100e060048036038101906100db9190610d2f565b61035f565b6040516100ed9190611076565b60405180910390f35b610110600480360381019061010b91906111c8565b610797565b005b8181600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020918261016092919061143b565b505050565b6060600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002080546101b19061125e565b80601f01602080910402602001604051908101604052809291908181526020018280546101dd9061125e565b801561022a5780601f106101ff5761010080835404028352916020019161022a565b820191906000526020600020905b81548152906001019060200180831161020d57829003601f168201915b50505050509050919050565b60606000600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000209050600061028682610a89565b67ffffffffffffffff81111561029f5761029e61109d565b5b6040519080825280602002602001820160405280156102cd5781602001602082028036833780820191505090505b50905060005b6102dc83610a89565b811015610356576102f68184610a9e90919063ffffffff16565b8282815181106103095761030861150b565b5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff1681525050808061034e90611569565b9150506102d3565b50809250505090565b6060600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036103d0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103c7906115fd565b60405180910390fd5b600060015467ffffffffffffffff8111156103ee576103ed61109d565b5b60405190808252806020026020018201604052801561042757816020015b610414610bb7565b81526020019060019003908161040c5790505b5090506000805b600154811015610789578473ffffffffffffffffffffffffffffffffffffffff1660008083815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614801561050857503373ffffffffffffffffffffffffffffffffffffffff1660008083815260200190815260200160002060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16145b806105df57503373ffffffffffffffffffffffffffffffffffffffff1660008083815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161480156105de57508473ffffffffffffffffffffffffffffffffffffffff1660008083815260200190815260200160002060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16145b5b15610776576000808281526020019081526020016000206040518060800160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016002820180546106bd9061125e565b80601f01602080910402602001604051908101604052809291908181526020018280546106e99061125e565b80156107365780601f1061070b57610100808354040283529160200191610736565b820191906000526020600020905b81548152906001019060200180831161071957829003601f168201915b5050505050815260200160038201548152505083838151811061075c5761075b61150b565b5b6020026020010181905250818061077290611569565b9250505b808061078190611569565b91505061042e565b508082528192505050919050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610806576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107fd90611669565b60405180910390fd5b600081511161084a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610841906116d5565b60405180910390fd5b600033905060405180608001604052808473ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff16815260200183815260200142815250600080600154815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550604082015181600201908161095391906116f5565b50606082015181600301559050506109b283600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020610ab890919063ffffffff16565b50610a0481600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020610ab890919063ffffffff16565b5060016000815480929190610a1890611569565b91905055508273ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167fdae92809143c6b037355be1aa4cb165311afa4015a8b21abad32fbe38eb752d78442604051610a7c9291906117d6565b60405180910390a3505050565b6000610a9782600001610ae8565b9050919050565b6000610aad8360000183610af9565b60001c905092915050565b6000610ae0836000018373ffffffffffffffffffffffffffffffffffffffff1660001b610b24565b905092915050565b600081600001805490509050919050565b6000826000018281548110610b1157610b1061150b565b5b9060005260206000200154905092915050565b6000610b308383610b94565b610b89578260000182908060018154018082558091505060019003906000526020600020016000909190919091505582600001805490508360010160008481526020019081526020016000208190555060019050610b8e565b600090505b92915050565b600080836001016000848152602001908152602001600020541415905092915050565b6040518060800160405280600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff16815260200160608152602001600081525090565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b60008083601f840112610c4457610c43610c1f565b5b8235905067ffffffffffffffff811115610c6157610c60610c24565b5b602083019150836001820283011115610c7d57610c7c610c29565b5b9250929050565b60008060208385031215610c9b57610c9a610c15565b5b600083013567ffffffffffffffff811115610cb957610cb8610c1a565b5b610cc585828601610c2e565b92509250509250929050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610cfc82610cd1565b9050919050565b610d0c81610cf1565b8114610d1757600080fd5b50565b600081359050610d2981610d03565b92915050565b600060208284031215610d4557610d44610c15565b5b6000610d5384828501610d1a565b91505092915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610d96578082015181840152602081019050610d7b565b60008484015250505050565b6000601f19601f8301169050919050565b6000610dbe82610d5c565b610dc88185610d67565b9350610dd8818560208601610d78565b610de181610da2565b840191505092915050565b60006020820190508181036000830152610e068184610db3565b905092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b610e4381610cf1565b82525050565b6000610e558383610e3a565b60208301905092915050565b6000602082019050919050565b6000610e7982610e0e565b610e838185610e19565b9350610e8e83610e2a565b8060005b83811015610ebf578151610ea68882610e49565b9750610eb183610e61565b925050600181019050610e92565b5085935050505092915050565b60006020820190508181036000830152610ee68184610e6e565b905092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600082825260208201905092915050565b6000610f3682610d5c565b610f408185610f1a565b9350610f50818560208601610d78565b610f5981610da2565b840191505092915050565b6000819050919050565b610f7781610f64565b82525050565b6000608083016000830151610f956000860182610e3a565b506020830151610fa86020860182610e3a565b5060408301518482036040860152610fc08282610f2b565b9150506060830151610fd56060860182610f6e565b508091505092915050565b6000610fec8383610f7d565b905092915050565b6000602082019050919050565b600061100c82610eee565b6110168185610ef9565b93508360208202850161102885610f0a565b8060005b8581101561106457848403895281516110458582610fe0565b945061105083610ff4565b925060208a0199505060018101905061102c565b50829750879550505050505092915050565b600060208201905081810360008301526110908184611001565b905092915050565b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6110d582610da2565b810181811067ffffffffffffffff821117156110f4576110f361109d565b5b80604052505050565b6000611107610c0b565b905061111382826110cc565b919050565b600067ffffffffffffffff8211156111335761113261109d565b5b61113c82610da2565b9050602081019050919050565b82818337600083830152505050565b600061116b61116684611118565b6110fd565b90508281526020810184848401111561118757611186611098565b5b611192848285611149565b509392505050565b600082601f8301126111af576111ae610c1f565b5b81356111bf848260208601611158565b91505092915050565b600080604083850312156111df576111de610c15565b5b60006111ed85828601610d1a565b925050602083013567ffffffffffffffff81111561120e5761120d610c1a565b5b61121a8582860161119a565b9150509250929050565b600082905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061127657607f821691505b6020821081036112895761128861122f565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026112f17fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826112b4565b6112fb86836112b4565b95508019841693508086168417925050509392505050565b6000819050919050565b600061133861133361132e84610f64565b611313565b610f64565b9050919050565b6000819050919050565b6113528361131d565b61136661135e8261133f565b8484546112c1565b825550505050565b600090565b61137b61136e565b611386818484611349565b505050565b5b818110156113aa5761139f600082611373565b60018101905061138c565b5050565b601f8211156113ef576113c08161128f565b6113c9846112a4565b810160208510156113d8578190505b6113ec6113e4856112a4565b83018261138b565b50505b505050565b600082821c905092915050565b6000611412600019846008026113f4565b1980831691505092915050565b600061142b8383611401565b9150826002028217905092915050565b6114458383611224565b67ffffffffffffffff81111561145e5761145d61109d565b5b611468825461125e565b6114738282856113ae565b6000601f8311600181146114a25760008415611490578287013590505b61149a858261141f565b865550611502565b601f1984166114b08661128f565b60005b828110156114d8578489013582556001820191506020850194506020810190506114b3565b868310156114f557848901356114f1601f891682611401565b8355505b6001600288020188555050505b50505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061157482610f64565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036115a6576115a561153a565b5b600182019050919050565b7f496e76616c696420616464726573730000000000000000000000000000000000600082015250565b60006115e7600f83610d67565b91506115f2826115b1565b602082019050919050565b60006020820190508181036000830152611616816115da565b9050919050565b7f496e76616c696420726563697069656e74206164647265737300000000000000600082015250565b6000611653601983610d67565b915061165e8261161d565b602082019050919050565b6000602082019050818103600083015261168281611646565b9050919050565b7f496e76616c6964206d6573736167652074657874000000000000000000000000600082015250565b60006116bf601483610d67565b91506116ca82611689565b602082019050919050565b600060208201905081810360008301526116ee816116b2565b9050919050565b6116fe82610d5c565b67ffffffffffffffff8111156117175761171661109d565b5b611721825461125e565b61172c8282856113ae565b600060209050601f83116001811461175f576000841561174d578287015190505b611757858261141f565b8655506117bf565b601f19841661176d8661128f565b60005b8281101561179557848901518255600182019150602085019450602081019050611770565b868310156117b257848901516117ae601f891682611401565b8355505b6001600288020188555050505b505050505050565b6117d081610f64565b82525050565b600060408201905081810360008301526117f08185610db3565b90506117ff60208301846117c7565b939250505056fea2646970667358221220661058dbe8cdffff97f95f00b909af6b8bec7253eb8d56b2591565e9eb40995964736f6c63430008120033";

type ChatConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ChatConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Chat__factory extends ContractFactory {
  constructor(...args: ChatConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Chat> {
    return super.deploy(overrides || {}) as Promise<Chat>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): Chat {
    return super.attach(address) as Chat;
  }
  override connect(signer: Signer): Chat__factory {
    return super.connect(signer) as Chat__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ChatInterface {
    return new utils.Interface(_abi) as ChatInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Chat {
    return new Contract(address, _abi, signerOrProvider) as Chat;
  }
}
