/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type { TippingSystem, TippingSystemInterface } from "../TippingSystem";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "balances",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "locked",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
    ],
    name: "tip",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50610a51806100206000396000f3fe60806040526004361061003f5760003560e01c806327e235e3146100445780633ccfd60b14610081578063ac733ef714610098578063cbf9fe5f146100b4575b600080fd5b34801561005057600080fd5b5061006b60048036038101906100669190610688565b6100f1565b60405161007891906106ce565b60405180910390f35b34801561008d57600080fd5b50610096610109565b005b6100b260048036038101906100ad9190610688565b6103bf565b005b3480156100c057600080fd5b506100db60048036038101906100d69190610688565b610605565b6040516100e89190610704565b60405180910390f35b60006020528060005260406000206000915090505481565b60008060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490506000811161018f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101869061077c565b60405180910390fd5b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff161561021c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610213906107e8565b60405180910390fd5b60018060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555060008060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555060003373ffffffffffffffffffffffffffffffffffffffff16826040516102dd90610839565b60006040518083038185875af1925050503d806000811461031a576040519150601f19603f3d011682016040523d82523d6000602084013e61031f565b606091505b5050905080610363576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161035a9061089a565b60405180910390fd5b6000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b60003411610402576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103f99061092c565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610471576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161046890610998565b60405180910390fd5b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16156104fe576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104f5906107e8565b60405180910390fd5b60018060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550346000808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546105a391906109e7565b925050819055506000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b60016020528060005260406000206000915054906101000a900460ff1681565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006106558261062a565b9050919050565b6106658161064a565b811461067057600080fd5b50565b6000813590506106828161065c565b92915050565b60006020828403121561069e5761069d610625565b5b60006106ac84828501610673565b91505092915050565b6000819050919050565b6106c8816106b5565b82525050565b60006020820190506106e360008301846106bf565b92915050565b60008115159050919050565b6106fe816106e9565b82525050565b600060208201905061071960008301846106f5565b92915050565b600082825260208201905092915050565b7f496e73756666696369656e742062616c616e6365000000000000000000000000600082015250565b600061076660148361071f565b915061077182610730565b602082019050919050565b6000602082019050818103600083015261079581610759565b9050919050565b7f5472616e73616374696f6e20696e2070726f6772657373000000000000000000600082015250565b60006107d260178361071f565b91506107dd8261079c565b602082019050919050565b60006020820190508181036000830152610801816107c5565b9050919050565b600081905092915050565b50565b6000610823600083610808565b915061082e82610813565b600082019050919050565b600061084482610816565b9150819050919050565b7f5769746864726177206661696c65640000000000000000000000000000000000600082015250565b6000610884600f8361071f565b915061088f8261084e565b602082019050919050565b600060208201905081810360008301526108b381610877565b9050919050565b7f54697020616d6f756e74206d7573742062652067726561746572207468616e2060008201527f7a65726f00000000000000000000000000000000000000000000000000000000602082015250565b600061091660248361071f565b9150610921826108ba565b604082019050919050565b6000602082019050818103600083015261094581610909565b9050919050565b7f496e76616c696420726563697069656e74206164647265737300000000000000600082015250565b600061098260198361071f565b915061098d8261094c565b602082019050919050565b600060208201905081810360008301526109b181610975565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006109f2826106b5565b91506109fd836106b5565b9250828201905080821115610a1557610a146109b8565b5b9291505056fea2646970667358221220fc5f44aa9ded47fa7c1040d634d4a2466d49ffb47a3d98da4acfb2e7c4be2bfe64736f6c63430008120033";

type TippingSystemConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TippingSystemConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TippingSystem__factory extends ContractFactory {
  constructor(...args: TippingSystemConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<TippingSystem> {
    return super.deploy(overrides || {}) as Promise<TippingSystem>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): TippingSystem {
    return super.attach(address) as TippingSystem;
  }
  override connect(signer: Signer): TippingSystem__factory {
    return super.connect(signer) as TippingSystem__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TippingSystemInterface {
    return new utils.Interface(_abi) as TippingSystemInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TippingSystem {
    return new Contract(address, _abi, signerOrProvider) as TippingSystem;
  }
}
